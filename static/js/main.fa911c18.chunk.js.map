{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","index.js"],"names":["Song","currentSong","isPlaying","className","alt","name","src","cover","artist","Player","setCurrentSong","id","setIsPlaying","songInfo","setSongInfo","audioRef","songs","setSongs","getTime","time","Math","floor","slice","activeLibrarySong","nextPrev","newSongs","map","song","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","animationPercentage","currentTime","duration","style","background","color","type","value","min","max","onChange","e","target","transform","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useState","chillpop","useRef","timeUpdateHandler","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa911c18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({currentSong, isPlaying}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover} className={`${isPlaying ? 'rotate' : ''}`}/>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({currentSong, setCurrentSong, id, isPlaying, setIsPlaying, songInfo, setSongInfo, audioRef, songs, setSongs}) => {\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n    const playSongHandler = () => {\r\n        if(isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play(); \r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n    const activeLibrarySong = (nextPrev) => {\r\n        const newSongs = songs.map((song)=> {\r\n            if(song.id === nextPrev.id) { return {...song, active:true}}\r\n            else { return {...song, active:false}}\r\n        })\r\n        setSongs(newSongs);\r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n     \r\n        if(direction === \"skip-forward\") { \r\n            await setCurrentSong(songs[(currentIndex+1) % songs.length]);\r\n            activeLibrarySong(songs[(currentIndex+1) % songs.length])\r\n        }\r\n        if(direction === \"skip-back\"){ \r\n            if((currentIndex-1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length-1]);\r\n                if(isPlaying) {audioRef.current.play()}\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex-1) % songs.length])\r\n        }\r\n        \r\n        if(isPlaying) {audioRef.current.play()}\r\n    }\r\n    const animationPercentage = (songInfo.currentTime / songInfo.duration) * 100;\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background:`linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                    <input type=\"range\" value={songInfo.currentTime} min={0} max={songInfo.duration || 0} onChange={dragHandler}/>\r\n                    <div className=\"animate-track\" style={{transform: `translateX(${animationPercentage}%)`}}></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-back\")} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-forward\")} className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","\r\nimport React from \"react\";\r\n\r\nconst LibrarySong = ({song, songs, id, setCurrentSong, audioRef, isPlaying, setSongs}) => {\r\n    const songSelectHandler =  async () => {\r\n        await setCurrentSong(song);\r\n        const newSongs = songs.map(song => {\r\n            if(song.id === id) { return {...song, active:true}}\r\n            else { return {...song, active:false}}\r\n        })\r\n        setSongs(newSongs);\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? \"selected\" : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}/>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                { songs.map(song => \r\n                    <LibrarySong \r\n                    song={song} \r\n                    songs={songs}\r\n                    id={song.id}\r\n                    setCurrentSong={setCurrentSong}\r\n                    key={song.id}\r\n                    audioRef={audioRef}\r\n                    isPlaying={isPlaying}\r\n                    setSongs={setSongs}\r\n                    libraryStatus={libraryStatus}\r\n                    />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Upset (hold it in)\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7925\",\r\n      color: [\"#BA4A46\", \"#FDF0FD\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    }\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React, {useRef, useState} from \"react\";\nimport \"./styles/app.scss\";\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//import util\nimport chillpop from \"./data\";\n\n\nfunction App() {\n  const [songs, setSongs] = useState(chillpop());\n  const [currentSong, setCurrentSong] = useState(songs[0])\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n})\nconst [libraryStatus, setLibraryStatus] = useState(false);\nconst audioRef = useRef(null);\nconst timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration:duration})\n}\nconst songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n  await setCurrentSong(songs[(currentIndex+1) % songs.length]);\n  if(isPlaying) {audioRef.current.play()}\n}\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      <Song currentSong={currentSong} isPlaying={isPlaying}/>\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n       <Library \n       audioRef={audioRef} \n       songs={songs} \n       setCurrentSong={setCurrentSong} \n       isPlaying={isPlaying} \n       setSongs={setSongs} \n       libraryStatus={libraryStatus}\n       />\n       <audio \n       onLoadedMetadata={timeUpdateHandler}  \n       onTimeUpdate={timeUpdateHandler}\n       ref={audioRef} \n       src={currentSong.audio}\n       onEnded={songEndHandler}\n       >\n       </audio>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}